
Process promises refer to items in the system process table. Note that
this is not the same as commands (which are instructions that CFEngine will
execute). A process
is a command in some state of execution (with a Process Control
Block).  Promiser objects here are patterns that match line fragments
in the system process table (that is, the patterns are unanchored,
@pxref{Anchored vs. unanchored regular expressions}).
@i{Take care to note that process table formats differ between operating
systems, and the use of simple patterns such as program-names is recommended.
For more sophisticated matches, users should use the @code{process_select}
feature.}  For example, on many systems, the process pattern @code{"^cp"}
may not match any processes, even though @code{"cp"} is running!  This is
because the process table entry may list @code{"/bin/cp"}.  However, the
process pattern @code{"cp"} will also match a process containing @code{"scp"},
so take care not to oversimplify your patterns (the PCRE pattern anchors
@code{"\b"} and @code{"\B"} may prove very useful to you).

@cartouche
@smallexample

 processes:

   "@var{regex contained in process line}"
     
       process_select => @var{process_filter_body},
       restart_class => "activation class for process",
       ..;

@end smallexample
@end cartouche

In CFEngine 2 there was a restart clause for directly executing a
command to restart a process. In CFEngine 3 there is instead
a class to activate. You must then desribe a @code{command} in that
class to restart the process.

@verbatim

commands:

  restart_me::

   "/path/executable" ... ;

@end verbatim
This rationalizes complex restart-commands and avoids unnecessary overlap
between @code{processes} and @code{commands}.

The @code{process_stop} is also arguably a command, but it should be
an ephemeral command that does not lead to a persistent process. It is
intended only for commands of the form @samp{/etc/inetd service stop}, not
for processes that persist. Processes are restarted at the end of a bundle's
execution, but stop commands are executed immediately.

Note: @code{process_select} was previously called process @code{filters} in
CFEngine 2 and earlier.

Note: that processes in foreign jails are excluded from the process list on 
default.

